---
- name: Get Cluster IPs
  netapp.ontap.na_ontap_restit:
    hostname: "{{ dhcp_node1_ip }}"
    username: admin
    password: Netapp1!
    https: true
    validate_certs: false
    api: cluster/nodes
    query:
      fields: cluster_interfaces
    method: GET
  register: cluster_ip_node_info

- name: Create Body for the Cluster Setup
  ansible.builtin.set_fact:
    body:
      name: "{{ cluster_name }}"
      management_interface:
        ip:
          address: "{{ cluster_mgmt_ip }}"
          netmask: "{{ subnet_mask }}"
          gateway: "{{ gateway }}"
      dns_domains:
        - "{{ dns_domain }}"
      name_servers:
        -  "{{ dns_name_server }}"
      timezone:
        name: "{{ timezone }}"
      ntp_servers:
        - "{{ ntp_server }}"
      nodes:
        - name: "{{ cluster_name }}-01"
          cluster_interface:
            ip:
              address: "{{cluster_ip_node_info.response.records[1].cluster_interfaces[0].ip.address}}"
          location: "{{ location }}"
          management_interface:
            ip:
              address: "{{ node1_mgmt_ip }}"
        - name: "{{ cluster_name }}-02"
          cluster_interface:
            ip:
              address: "{{cluster_ip_node_info.response.records[0].cluster_interfaces[0].ip.address}}"
          location: "{{ location }}"
          management_interface:
            ip:
              address: "{{ node2_mgmt_ip }}"

- name: Show the Body
  debug:
    msg: "{{ body }}"

- name: run ontap REST API command as cluster admin
  netapp.ontap.na_ontap_restit:
    hostname: "{{ dhcp_node1_ip }}"
    username: admin
    password: Netapp1!
    https: true
    validate_certs: false
    api: cluster
    body: "{{ body }}"
    method: POST
  register: restit_start

- name: Show me restit_start
  debug:
    msg: "{{ restit_start }}"

- name: Get Job Status
  netapp.ontap.na_ontap_restit:
    hostname: "{{ node1_mgmt_ip }}"
    username: admin
    password: Netapp1!
    https: true
    validate_certs: false
    api: "cluster/jobs/{{ restit_start.response.job.uuid }}"
  register: restit_job_status

- name: Show me the Job Status
  debug:
    msg: "{{ restit_job_status }}"
