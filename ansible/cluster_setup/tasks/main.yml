---
- name: Get Cluster IPs
  netapp.ontap.na_ontap_restit:
    hostname: "{{ dhcp_node1_ip }}"
    username: admin
    password: Netapp1!
    https: true
    validate_certs: false
    api: cluster/nodes
    query:
      fields: cluster_interfaces
    method: GET
  register: cluster_ip_node_info

- name: Create Body for the Cluster Setup
  ansible.builtin.set_fact:
    body:
      name: "{{ cluster_name }}"
      management_interface:
        ip:
          address: "{{ cluster_mgmt_ip }}"
          netmask: "{{ subnet_mask }}"
          gateway: "{{ gateway }}"
      dns_domains: "{{ dns_domain }}"
      name_servers: "{{ dns_name_server }}"
      timezone.name: "{{ timezone }}"
      nodes:
        - name: "{{ cluster_name }}-01"
          cluster_interface:
            ip:
              address: "{{ cluster_ip_node_info.response.records[0].cluster_interfaces[0].ip.address }}"
          location: "{{ location }}"
          management_interface:
            ip:
              address: "{{ node1_mgmt_ip }}"
        - name: "{{ cluster_name }}-02"
          cluster_interface:
            ip:
              address: "{{ cluster_ip_node_info.response.records[1].cluster_interfaces[0].ip.address }}"
          location: "{{ location }}"
          management_interface:
            ip:
              address: "{{ node2_mgmt_ip }}"

- name: Start Cluster Setup
  netapp.ontap.na_ontap_restit:
    hostname: "{{ dhcp_node1_ip }}"
    username: admin
    password: Netapp1!
    https: true
    validate_certs: false
    api: cluster
    body: "{{ body }}"
    method: POST
  register: start_cluster_setup

- name: Wait until Cluster Setup is done
  netapp.ontap.na_ontap_restit:
    hostname: "{{ dhcp_node1_ip }}"
    username: admin
    password: Netapp1!
    https: true
    validate_certs: false
    api: "cluster/jobs/{{ start_cluster_setup.response.job.uuid }}"
  register: job_status
  until: job_status.response.state != 'running'
  retries: 100
  delay: 3

- name: Show Job Status and Message
  ansible.builtin.debug:
    msg: "{{ job_status.response.state }} -> {{ job_status.response.message }}"

- name: Create Data Aggregate on Node 1
  netapp.ontap.na_ontap_aggregate:
    hostname: "{{ dhcp_node1_ip }}"
    username: admin
    password: Netapp1!
    https: true
    validate_certs: false
    state: present
    service_state: online
    name: "{{ cluster_name }}_01_data"
    disk_count: 10
    nodes: "{{ cluster_name }}-01"
    snaplock_type: non_snaplock

- name: Create Data Aggregate on Node 2
  netapp.ontap.na_ontap_aggregate:
    hostname: "{{ dhcp_node1_ip }}"
    username: admin
    password: Netapp1!
    https: true
    validate_certs: false
    state: present
    service_state: online
    name: "{{ cluster_name }}_02_data"
    disk_count: 10
    nodes: "{{ cluster_name }}-02"
    snaplock_type: non_snaplock
